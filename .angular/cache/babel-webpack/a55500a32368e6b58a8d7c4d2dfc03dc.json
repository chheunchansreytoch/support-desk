{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/stores/agent.store\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction CreateAgentsDialogComponent_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 7);\n    i0.ɵɵtext(1, \"Please Input Username.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateAgentsDialogComponent_p_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 7);\n    i0.ɵɵtext(1, \"Please Input Username.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let CreateAgentsDialogComponent = /*#__PURE__*/(() => {\n  class CreateAgentsDialogComponent {\n    constructor(agentStore) {\n      this.agentStore = agentStore;\n      this.SelectGender = '';\n      this.arrAgents = [];\n      this.genders = [{\n        gender: 'Male'\n      }, {\n        gender: 'Female'\n      }];\n    }\n\n    formSubmitted(formData) {\n      if (this.registrationForm.valid) {\n        this.agentStore.addAgent(Object.assign(Object.assign({}, formData), {\n          photoFilePath: formData.photo,\n          photoDownloadUrl: formData.photo\n        })).subscribe(res => {\n          this.arrAgents.push(res);\n          this.registrationForm.reset();\n        });\n      }\n\n      return;\n    }\n\n    radioChangeHandler(e) {\n      this.SelectGender = e.target.value;\n    }\n\n    ngOnInit() {// this.createAgent();\n    }\n\n  }\n\n  CreateAgentsDialogComponent.ɵfac = function CreateAgentsDialogComponent_Factory(t) {\n    return new (t || CreateAgentsDialogComponent)(i0.ɵɵdirectiveInject(i1.AgentStore));\n  };\n\n  CreateAgentsDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateAgentsDialogComponent,\n    selectors: [[\"app-create-agents-dialog\"]],\n    decls: 15,\n    vars: 2,\n    consts: [[1, \"register-agent\"], [\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [1, \"inputContainer\"], [\"for\", \"inputFirstname\", 1, \"label\"], [\"id\", \"inputUsername\", \"placeholder\", \"username\", \"formControlName\", \"username\", 1, \"input\"], [\"class\", \"errorMessageLabel\", 4, \"ngIf\"], [1, \"errorMessageLabel\"]],\n    template: function CreateAgentsDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h4\", 1);\n        i0.ɵɵtext(2, \"Create Agent\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"form\");\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelementStart(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Username \");\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, CreateAgentsDialogComponent_p_9_Template, 2, 0, \"p\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 3);\n        i0.ɵɵelementStart(11, \"label\", 4);\n        i0.ɵɵtext(12, \"Firstname\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 5);\n        i0.ɵɵtemplate(14, CreateAgentsDialogComponent_p_14_Template, 2, 0, \"p\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", (ctx.registrationForm.controls[\"username\"] == null ? null : ctx.registrationForm.controls[\"username\"].touched) && (ctx.registrationForm.controls[\"username\"] == null ? null : ctx.registrationForm.controls[\"username\"].errors == null ? null : ctx.registrationForm.controls[\"username\"].errors.required));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.registrationForm.controls[\"username\"] == null ? null : ctx.registrationForm.controls[\"username\"].touched) && (ctx.registrationForm.controls[\"username\"] == null ? null : ctx.registrationForm.controls[\"username\"].errors == null ? null : ctx.registrationForm.controls[\"username\"].errors.required));\n      }\n    },\n    directives: [i2.MatDialogTitle, i2.MatDialogContent, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i4.NgIf],\n    styles: [\"\"]\n  });\n  return CreateAgentsDialogComponent;\n})();\nexport function ConfirmedValidator(controlName, matchingControlName) {\n  return formGroup => {\n    const control = formGroup.controls[controlName];\n    const matchingControl = formGroup.controls[matchingControlName];\n\n    if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\n      return;\n    }\n\n    if (control.value !== matchingControl.value) {\n      matchingControl.setErrors({\n        confirmedValidator: true\n      });\n    } else {\n      matchingControl.setErrors(null);\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}