{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/stores/agentDepartment.store\";\nimport * as i2 from \"src/app/stores/agent.store\";\nimport * as i3 from \"src/app/stores/manager.store\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/common\";\n\nfunction CreateAgentsDialogComponent_p_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 26);\n    i0.ɵɵtext(1, \"Please Input Username.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateAgentsDialogComponent_p_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 26);\n    i0.ɵɵtext(1, \"Please Input Email.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateAgentsDialogComponent_p_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 26);\n    i0.ɵɵtext(1, \"Please Input Password.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateAgentsDialogComponent_p_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 26);\n    i0.ɵɵtext(1, \"Please Input Confirm Password.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateAgentsDialogComponent_p_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 26);\n    i0.ɵɵtext(1, \"Confirm Password is not match.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateAgentsDialogComponent_option_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r9 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", item_r9.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r9.name);\n  }\n}\n\nfunction CreateAgentsDialogComponent_p_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 26);\n    i0.ɵɵtext(1, \"Please Select Any Department.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateAgentsDialogComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵelementStart(1, \"input\", 29);\n    i0.ɵɵlistener(\"change\", function CreateAgentsDialogComponent_div_41_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.radioChangeHandler($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\", 30);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const gender_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"value\", gender_r10);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(gender_r10);\n  }\n}\n\nfunction CreateAgentsDialogComponent_p_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 26);\n    i0.ɵɵtext(1, \"Please Select Any Department.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let CreateAgentsDialogComponent = /*#__PURE__*/(() => {\n  class CreateAgentsDialogComponent {\n    constructor(agentDepartmentStore, agentStore, managerStore, formBuilder) {\n      this.agentDepartmentStore = agentDepartmentStore;\n      this.agentStore = agentStore;\n      this.managerStore = managerStore;\n      this.formBuilder = formBuilder;\n      this.SelectGender = '';\n      this.arrAgents = [];\n      this.arrAgentDepartments = [];\n      this.arrManagers = []; // public genders = Genders;\n      //selectedDepartmentDefault = this.arrAgentDepartments[0];\n\n      this.genders = ['Male', 'Female'];\n      this.registrationForm = formBuilder.group({\n        username: new FormControl('', Validators.required),\n        email: new FormControl('', [Validators.required, Validators.email]),\n        password: new FormControl('', Validators.required),\n        confirmPassword: new FormControl('', Validators.required),\n        department: new FormControl('', Validators.required),\n        gender: new FormControl('', Validators.required)\n      }, {\n        validators: ConfirmedValidator('password', 'confirmPassword')\n      });\n    }\n\n    fetchAgentDepartments() {\n      this.agentDepartmentStore.getAgentDepartments().subscribe(res => {\n        this.arrAgentDepartments = res;\n        console.log(this.arrAgentDepartments);\n      });\n    } // fetchManager() {\n    //   this.managerStore.getManagers().subscribe((res: any) => {\n    //     this.arrManagers = res;\n    //   });\n    // }\n\n\n    btnSubmitClicked() {}\n\n    formSubmitted(formData) {\n      if (this.registrationForm.valid) {\n        const {\n          department,\n          gender\n        } = formData;\n        const finalData = Object.assign(Object.assign({}, formData), {\n          createdBy: this.managerStore.getCurrentUser.id,\n          department: {\n            id: department\n          },\n          gender: gender\n        });\n        this.agentStore.addAgent(finalData).subscribe(res => {\n          this.arrAgents.push(finalData);\n          this.registrationForm.reset();\n        });\n        alert(\"Agent was Created\");\n      }\n\n      return;\n    }\n\n    radioChangeHandler(e) {\n      this.SelectGender = e.target.value;\n      console.log(this.SelectGender);\n    }\n\n    ngOnInit() {\n      this.fetchAgentDepartments();\n    }\n\n  }\n\n  CreateAgentsDialogComponent.ɵfac = function CreateAgentsDialogComponent_Factory(t) {\n    return new (t || CreateAgentsDialogComponent)(i0.ɵɵdirectiveInject(i1.AgentDepartmentStore), i0.ɵɵdirectiveInject(i2.AgentStore), i0.ɵɵdirectiveInject(i3.ManagerStore), i0.ɵɵdirectiveInject(i4.FormBuilder));\n  };\n\n  CreateAgentsDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateAgentsDialogComponent,\n    selectors: [[\"app-create-agents-dialog\"]],\n    decls: 50,\n    vars: 10,\n    consts: [[1, \"create-agent-container\"], [\"mat-dialog-title\", \"\"], [1, \"btn-close\"], [\"mat-dialog-content\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"loginform\"], [1, \"custom-field-0\"], [\"for\", \"username\", 1, \"label\"], [\"type\", \"text\", \"id\", \"username\", \"placeholder\", \"enter your username\", \"required\", \"\", \"formControlName\", \"username\", \"autocomplete\", \"new-password\", 1, \"input\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"for\", \"email\", 1, \"label\"], [\"type\", \"email\", \"id\", \"email\", \"placeholder\", \"enter your email\", \"required\", \"\", \"formControlName\", \"email\", \"autocomplete\", \"new-password\", 1, \"input\"], [\"for\", \"password\", 1, \"label\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"enter your password\", \"required\", \"\", \"formControlName\", \"password\", \"autocomplete\", \"new-password\", 1, \"input\"], [\"for\", \"confirmPassword\", 1, \"label\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"placeholder\", \"enter your confirmPassword\", \"required\", \"\", \"formControlName\", \"confirmPassword\", \"autocomplete\", \"new-password\", 1, \"input\"], [\"for\", \"department\", 1, \"label\"], [\"id\", \"department\", \"required\", \"\", \"formControlName\", \"department\", 1, \"input\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"radio-button-container\"], [\"class\", \"radio-button\", 4, \"ngFor\", \"ngForOf\"], [\"mat-dialog-actions\", \"\", 1, \"custom-matdialog-footer\"], [1, \"close-btn\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\"], [1, \"create-btn\"], [3, \"click\"], [1, \"error-message\"], [3, \"value\"], [1, \"radio-button\"], [\"type\", \"radio\", \"name\", \"gender\", \"formControlName\", \"gender\", 3, \"value\", \"change\"], [1, \"radio-label\"]],\n    template: function CreateAgentsDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h4\", 1);\n        i0.ɵɵelementStart(2, \"span\");\n        i0.ɵɵtext(3, \"Create Agents\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 2);\n        i0.ɵɵelementStart(5, \"mat-icon\");\n        i0.ɵɵtext(6, \"close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵelementStart(8, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateAgentsDialogComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.formSubmitted(ctx.registrationForm.value);\n        });\n        i0.ɵɵelementStart(9, \"div\", 5);\n        i0.ɵɵelementStart(10, \"div\", 6);\n        i0.ɵɵelementStart(11, \"label\", 7);\n        i0.ɵɵtext(12, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 8);\n        i0.ɵɵtemplate(14, CreateAgentsDialogComponent_p_14_Template, 2, 0, \"p\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 6);\n        i0.ɵɵelementStart(16, \"label\", 10);\n        i0.ɵɵtext(17, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 11);\n        i0.ɵɵtemplate(19, CreateAgentsDialogComponent_p_19_Template, 2, 0, \"p\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 6);\n        i0.ɵɵelementStart(21, \"label\", 12);\n        i0.ɵɵtext(22, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 13);\n        i0.ɵɵtemplate(24, CreateAgentsDialogComponent_p_24_Template, 2, 0, \"p\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 6);\n        i0.ɵɵelementStart(26, \"label\", 14);\n        i0.ɵɵtext(27, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 15);\n        i0.ɵɵtemplate(29, CreateAgentsDialogComponent_p_29_Template, 2, 0, \"p\", 9);\n        i0.ɵɵtemplate(30, CreateAgentsDialogComponent_p_30_Template, 2, 0, \"p\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 6);\n        i0.ɵɵelementStart(32, \"label\", 16);\n        i0.ɵɵtext(33, \"Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"select\", 17);\n        i0.ɵɵtemplate(35, CreateAgentsDialogComponent_option_35_Template, 2, 2, \"option\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(36, CreateAgentsDialogComponent_p_36_Template, 2, 0, \"p\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"div\", 6);\n        i0.ɵɵelementStart(38, \"label\", 16);\n        i0.ɵɵtext(39, \"Gender\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\", 19);\n        i0.ɵɵtemplate(41, CreateAgentsDialogComponent_div_41_Template, 4, 2, \"div\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(42, CreateAgentsDialogComponent_p_42_Template, 2, 0, \"p\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"div\", 21);\n        i0.ɵɵelementStart(44, \"div\", 22);\n        i0.ɵɵelementStart(45, \"button\", 23);\n        i0.ɵɵtext(46, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"div\", 24);\n        i0.ɵɵelementStart(48, \"button\", 25);\n        i0.ɵɵlistener(\"click\", function CreateAgentsDialogComponent_Template_button_click_48_listener() {\n          return ctx.btnSubmitClicked();\n        });\n        i0.ɵɵtext(49, \"Create\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.registrationForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", (ctx.registrationForm.controls[\"username\"] == null ? null : ctx.registrationForm.controls[\"username\"].touched) && (ctx.registrationForm.controls[\"username\"] == null ? null : ctx.registrationForm.controls[\"username\"].errors == null ? null : ctx.registrationForm.controls[\"username\"].errors.required));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.registrationForm.controls[\"email\"] == null ? null : ctx.registrationForm.controls[\"email\"].touched) && (ctx.registrationForm.controls[\"email\"] == null ? null : ctx.registrationForm.controls[\"email\"].errors == null ? null : ctx.registrationForm.controls[\"email\"].errors.required));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.registrationForm.controls[\"password\"] == null ? null : ctx.registrationForm.controls[\"password\"].touched) && (ctx.registrationForm.controls[\"password\"] == null ? null : ctx.registrationForm.controls[\"password\"].errors == null ? null : ctx.registrationForm.controls[\"password\"].errors.required));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.registrationForm.controls[\"confirmPassword\"] == null ? null : ctx.registrationForm.controls[\"confirmPassword\"].touched) && (ctx.registrationForm.controls[\"confirmPassword\"] == null ? null : ctx.registrationForm.controls[\"confirmPassword\"].errors == null ? null : ctx.registrationForm.controls[\"confirmPassword\"].errors.required));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.registrationForm.controls[\"confirmPassword\"] == null ? null : ctx.registrationForm.controls[\"confirmPassword\"].touched) && (ctx.registrationForm.controls[\"confirmPassword\"] == null ? null : ctx.registrationForm.controls[\"confirmPassword\"].errors == null ? null : ctx.registrationForm.controls[\"confirmPassword\"].errors.confirmedValidator));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.arrAgentDepartments);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.registrationForm.controls[\"department\"] == null ? null : ctx.registrationForm.controls[\"department\"].touched) && (ctx.registrationForm.controls[\"department\"] == null ? null : ctx.registrationForm.controls[\"department\"].errors == null ? null : ctx.registrationForm.controls[\"department\"].errors.required));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.genders);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.registrationForm.controls[\"department\"] == null ? null : ctx.registrationForm.controls[\"department\"].touched) && (ctx.registrationForm.controls[\"department\"] == null ? null : ctx.registrationForm.controls[\"department\"].errors == null ? null : ctx.registrationForm.controls[\"department\"].errors.required));\n      }\n    },\n    directives: [i5.MatDialogTitle, i6.MatIcon, i5.MatDialogContent, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.DefaultValueAccessor, i4.RequiredValidator, i4.NgControlStatus, i4.FormControlName, i7.NgIf, i4.SelectControlValueAccessor, i7.NgForOf, i5.MatDialogActions, i5.MatDialogClose, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.RadioControlValueAccessor],\n    styles: [\"\"]\n  });\n  return CreateAgentsDialogComponent;\n})();\nexport function ConfirmedValidator(controlName, matchingControlName) {\n  return formGroup => {\n    const control = formGroup.controls[controlName];\n    const matchingControl = formGroup.controls[matchingControlName];\n\n    if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\n      return;\n    }\n\n    if (control.value !== matchingControl.value) {\n      matchingControl.setErrors({\n        confirmedValidator: true\n      });\n    } else {\n      matchingControl.setErrors(null);\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}