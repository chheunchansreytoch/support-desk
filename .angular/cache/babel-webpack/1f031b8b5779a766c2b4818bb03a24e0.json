{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { action, observable } from \"mobx\";\nimport { HttpHeaders } from \"@angular/common/http\";\nimport { throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class PaginationStore {\n  constructor(httpClient, router) {\n    var _a;\n\n    this.httpClient = httpClient;\n    this.router = router;\n    this.isLoading = false;\n    this.arrAgent = [];\n    this.length = 100;\n    this.pageIndex = 1;\n    this.pageSize = 10;\n    this.previousPageIndex = 0;\n    this.endpoint = 'http://localhost:3000/api';\n    this.httpHeader = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,DELETE,PUT'\n      })\n    };\n    this.httpHeaderWithToken = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,DELETE,PUT',\n        'Authorization': 'Bearer ' + ((_a = this.getJSONToken()) === null || _a === void 0 ? void 0 : _a.token)\n      })\n    };\n  }\n\n  getJSONToken() {\n    const result = localStorage.getItem(\"manager_auth\") ? JSON.parse(localStorage.getItem(\"manager_auth\") || '{}') : undefined;\n    return result;\n  }\n\n  getAgentsWithPagination(pageSize, pageIndex, keyword) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const result = yield this.httpClient.get(this.endpoint + `/agents/${pageSize}/${pageIndex}/${keyword || 'null'}`, this.httpHeaderWithToken).toPromise();\n      console.log(result);\n      return result;\n    });\n  }\n\n  processError(err) {\n    let message = '';\n\n    if (err.error instanceof ErrorEvent) {\n      message = err.error.message;\n    } else {\n      message = `Error Code: ${err.status}\\nMessage: ${err.message}`;\n    }\n\n    console.log(message);\n    return throwError(message);\n  }\n\n}\n\nPaginationStore.ɵfac = function PaginationStore_Factory(t) {\n  return new (t || PaginationStore)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\n\nPaginationStore.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PaginationStore,\n  factory: PaginationStore.ɵfac,\n  providedIn: 'root'\n});\n\n__decorate([observable], PaginationStore.prototype, \"isLoading\", void 0);\n\n__decorate([observable], PaginationStore.prototype, \"arrAgent\", void 0);\n\n__decorate([observable], PaginationStore.prototype, \"length\", void 0);\n\n__decorate([observable], PaginationStore.prototype, \"pageIndex\", void 0);\n\n__decorate([observable], PaginationStore.prototype, \"pageSize\", void 0);\n\n__decorate([observable], PaginationStore.prototype, \"previousPageIndex\", void 0);\n\n__decorate([action], PaginationStore.prototype, \"getAgentsWithPagination\", null);","map":null,"metadata":{},"sourceType":"module"}