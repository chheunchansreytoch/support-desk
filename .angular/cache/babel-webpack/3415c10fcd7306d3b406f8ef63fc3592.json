{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/stores/agent.store\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/select\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/core\";\n\nfunction CreateAgentsDialogComponent_mat_option_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r2, \" \");\n  }\n}\n\nfunction CreateAgentsDialogComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelementStart(1, \"label\", 24);\n    i0.ɵɵelementStart(2, \"input\", 25);\n    i0.ɵɵlistener(\"change\", function CreateAgentsDialogComponent_div_30_Template_input_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.radioChangeHandler($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const gender_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"value\", gender_r3.gender);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", gender_r3.gender, \" \");\n  }\n}\n\nexport let CreateAgentsDialogComponent = /*#__PURE__*/(() => {\n  class CreateAgentsDialogComponent {\n    constructor(agentStore) {\n      this.agentStore = agentStore;\n      this.SelectGender = '';\n      this.arrAgents = [];\n      this.selectedOption = '1';\n      this.departments = ['Developer', ' Accounting', 'Technical', 'Design'];\n      this.genders = [{\n        gender: 'Male'\n      }, {\n        gender: 'Female'\n      }];\n    }\n\n    formSubmitted(formData) {\n      if (this.registrationForm.valid) {\n        this.agentStore.addAgent(Object.assign(Object.assign({}, formData), {\n          photoFilePath: formData.photo,\n          photoDownloadUrl: formData.photo\n        })).subscribe(res => {\n          this.arrAgents.push(res);\n          this.registrationForm.reset();\n        });\n      }\n\n      return;\n    }\n\n    radioChangeHandler(e) {\n      this.SelectGender = e.target.value;\n    }\n\n    ngOnInit() {// this.createAgent();\n    }\n\n  }\n\n  CreateAgentsDialogComponent.ɵfac = function CreateAgentsDialogComponent_Factory(t) {\n    return new (t || CreateAgentsDialogComponent)(i0.ɵɵdirectiveInject(i1.AgentStore));\n  };\n\n  CreateAgentsDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateAgentsDialogComponent,\n    selectors: [[\"app-create-agents-dialog\"]],\n    decls: 38,\n    vars: 4,\n    consts: [[1, \"create-agent-container\"], [\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"loginform\"], [1, \"custom-field\"], [\"type\", \"text\", \"name\", \"username\", \"required\", \"\", \"formControlName\", \"username\", 1, \"form-input\"], [1, \"placeholder\"], [\"type\", \"email\", \"name\", \"email\", \"required\", \"\", \"formControlName\", \"email\", 1, \"form-input\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", \"formControlName\", \"password\", 1, \"form-input\"], [1, \"dept-gen-container\"], [1, \"custom-Related\"], [\"appearance\", \"fill\"], [\"disableRipple\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"custom-mat-select\", \"value\", \"1\", 4, \"ngFor\", \"ngForOf\"], [1, \"gender-container\"], [\"class\", \"custom-gender\", 4, \"ngFor\", \"ngForOf\"], [\"mat-dialog-actions\", \"\"], [1, \"custom-btn-close\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\", 1, \"btn-close\"], [1, \"custom-btn-create\"], [1, \"btn-create\"], [\"value\", \"1\", 1, \"custom-mat-select\"], [1, \"custom-gender\"], [1, \"agent-gender\"], [\"type\", \"radio\", \"name\", \"gender\", 3, \"value\", \"change\"]],\n    template: function CreateAgentsDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h4\", 1);\n        i0.ɵɵtext(2, \"Create Agents\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateAgentsDialogComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.formSubmitted(ctx.registrationForm.value);\n        });\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"label\", 5);\n        i0.ɵɵelement(7, \"input\", 6);\n        i0.ɵɵelementStart(8, \"span\", 7);\n        i0.ɵɵtext(9, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"label\", 5);\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵelementStart(12, \"span\", 7);\n        i0.ɵɵtext(13, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"label\", 5);\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵelementStart(16, \"span\", 7);\n        i0.ɵɵtext(17, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"label\", 5);\n        i0.ɵɵelement(19, \"input\", 9);\n        i0.ɵɵelementStart(20, \"span\", 7);\n        i0.ɵɵtext(21, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 10);\n        i0.ɵɵelementStart(23, \"div\", 11);\n        i0.ɵɵelementStart(24, \"label\");\n        i0.ɵɵtext(25, \"Related To\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"mat-form-field\", 12);\n        i0.ɵɵelementStart(27, \"mat-select\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateAgentsDialogComponent_Template_mat_select_ngModelChange_27_listener($event) {\n          return ctx.selectedOption = $event;\n        });\n        i0.ɵɵtemplate(28, CreateAgentsDialogComponent_mat_option_28_Template, 2, 1, \"mat-option\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 15);\n        i0.ɵɵtemplate(30, CreateAgentsDialogComponent_div_30_Template, 4, 2, \"div\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 17);\n        i0.ɵɵelementStart(32, \"div\", 18);\n        i0.ɵɵelementStart(33, \"button\", 19);\n        i0.ɵɵtext(34, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 20);\n        i0.ɵɵelementStart(36, \"button\", 21);\n        i0.ɵɵtext(37, \"Create\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.registrationForm);\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedOption);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.departments);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.genders);\n      }\n    },\n    directives: [i2.MatDialogTitle, i2.MatDialogContent, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.RequiredValidator, i3.NgControlStatus, i3.FormControlName, i4.MatFormField, i5.MatSelect, i3.NgModel, i6.NgForOf, i2.MatDialogActions, i2.MatDialogClose, i7.MatOption],\n    styles: [\"\"]\n  });\n  return CreateAgentsDialogComponent;\n})();\nexport function ConfirmedValidator(controlName, matchingControlName) {\n  return formGroup => {\n    const control = formGroup.controls[controlName];\n    const matchingControl = formGroup.controls[matchingControlName];\n\n    if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\n      return;\n    }\n\n    if (control.value !== matchingControl.value) {\n      matchingControl.setErrors({\n        confirmedValidator: true\n      });\n    } else {\n      matchingControl.setErrors(null);\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}