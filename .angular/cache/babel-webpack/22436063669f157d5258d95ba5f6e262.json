{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AlertInformationDialogComponent } from '../../alert-information-dialog/alert-information-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/stores/case.store\";\nimport * as i2 from \"src/app/stores/manager.store\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"src/app/stores/agent.store\";\nimport * as i5 from \"src/app/stores/agentDepartment.store\";\nimport * as i6 from \"src/app/stores/status.store\";\nimport * as i7 from \"src/app/stores/priority.store\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"@angular/material/button\";\n\nfunction AssignCaseDialogComponent_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", item_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r4.name);\n  }\n}\n\nfunction AssignCaseDialogComponent_p_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 16);\n    i0.ɵɵtext(1, \"Please Select agent Department.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AssignCaseDialogComponent_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", item_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r5 == null ? null : item_r5.username);\n  }\n}\n\nfunction AssignCaseDialogComponent_p_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 16);\n    i0.ɵɵtext(1, \"Please Select Agent Name.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let AssignCaseDialogComponent = /*#__PURE__*/(() => {\n  class AssignCaseDialogComponent {\n    constructor(caseStore, managerStore, dialog, agentStore, agentDepartmentStore, statusStore, priorityStore, formBuilder, dialogRef, data) {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n\n      this.caseStore = caseStore;\n      this.managerStore = managerStore;\n      this.dialog = dialog;\n      this.agentStore = agentStore;\n      this.agentDepartmentStore = agentDepartmentStore;\n      this.statusStore = statusStore;\n      this.priorityStore = priorityStore;\n      this.formBuilder = formBuilder;\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.arrAgentDepartments = [];\n      this.arrAgentsByDepartments = [];\n      this.arrStatuses = [];\n      this.arrPriorities = [];\n      this.arrManagers = [];\n      this.arrCases = [];\n      this.getDepartmentIdFromFormData = '';\n      this.agentsBySelectedDepartment = [];\n      this.assignForm = formBuilder.group({\n        caseNumber: new FormControl((_a = data === null || data === void 0 ? void 0 : data.caseNumber) !== null && _a !== void 0 ? _a : '', Validators.required),\n        status: new FormControl((_c = (_b = data === null || data === void 0 ? void 0 : data.status) === null || _b === void 0 ? void 0 : _b.id) !== null && _c !== void 0 ? _c : 'New', Validators.required),\n        priority: new FormControl((_e = (_d = data === null || data === void 0 ? void 0 : data.priority) === null || _d === void 0 ? void 0 : _d.id) !== null && _e !== void 0 ? _e : 'High', Validators.required),\n        agentDepartment: new FormControl((_h = (_g = (_f = data === null || data === void 0 ? void 0 : data.agent) === null || _f === void 0 ? void 0 : _f.agentDepartment) === null || _g === void 0 ? void 0 : _g.id) !== null && _h !== void 0 ? _h : '', Validators.required),\n        agent: new FormControl('', Validators.required),\n        subject: new FormControl((_j = data === null || data === void 0 ? void 0 : data.subject) !== null && _j !== void 0 ? _j : '', Validators.required),\n        description: new FormControl((_k = data === null || data === void 0 ? void 0 : data.description) !== null && _k !== void 0 ? _k : '', Validators.required)\n      });\n    }\n\n    ngOnInit() {}\n\n    formSubmitted(formData) {\n      return __awaiter(this, void 0, void 0, function* () {\n        //console.log(formData.agentDepartment);\n        if (this.assignForm.valid) {\n          const {\n            status,\n            priority,\n            agent\n          } = formData;\n\n          if (this.data) {\n            const caseData = Object.assign(Object.assign({}, formData), {\n              createdBy: this.managerStore.getCurrentUser.id,\n              status: {\n                id: status\n              },\n              priority: {\n                id: priority\n              },\n              agent: {\n                id: agent\n              },\n              id: this.data.id\n            });\n            yield this.caseStore.updateCase(caseData);\n          }\n\n          this.assignForm.enable();\n          this.assignForm.reset();\n          this.dialog.open(AlertInformationDialogComponent, {\n            width: '500px',\n            data: {\n              title: this.data ? 'Assign Case' : '',\n              type: 'success',\n              content: this.data ? `Case is assigned.` : ``\n            },\n            disableClose: true\n          });\n        }\n\n        this.getDepartmentIdFromFormData = formData.agentDepartment;\n        console.log(this.getDepartmentIdFromFormData);\n        return;\n      });\n    }\n\n    fetchManagers() {\n      this.managerStore.getManagers().subscribe(res => {\n        this.arrManagers = res;\n      });\n    }\n\n    fetchCases() {\n      this.caseStore.getCases().subscribe(res => {\n        this.arrCases = res;\n      });\n    }\n\n    fetchAgentsDepartment() {\n      this.agentDepartmentStore.getAgentDepartments().subscribe(res => {\n        this.arrAgentDepartments = res;\n      });\n    }\n\n    selectDepartmentChanged(event) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const id = event.target.value;\n        const agents = yield this.agentStore.getAgentsByDepartment(id);\n        this.agentsBySelectedDepartment = agents;\n      });\n    }\n\n    fetchStatuses() {\n      this.statusStore.getStatuses().subscribe(res => {\n        this.arrStatuses = res;\n      });\n    }\n\n    fetchPriorities() {\n      this.priorityStore.getPriorities().subscribe(res => {\n        this.arrPriorities = res;\n      });\n    }\n\n  }\n\n  AssignCaseDialogComponent.ɵfac = function AssignCaseDialogComponent_Factory(t) {\n    return new (t || AssignCaseDialogComponent)(i0.ɵɵdirectiveInject(i1.CaseStore), i0.ɵɵdirectiveInject(i2.ManagerStore), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.AgentStore), i0.ɵɵdirectiveInject(i5.AgentDepartmentStore), i0.ɵɵdirectiveInject(i6.StatusStore), i0.ɵɵdirectiveInject(i7.PriorityStore), i0.ɵɵdirectiveInject(i8.FormBuilder), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  AssignCaseDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AssignCaseDialogComponent,\n    selectors: [[\"app-assign-case-dialog\"]],\n    decls: 27,\n    vars: 5,\n    consts: [[1, \"form-dialog-container\"], [\"mat-dialog-title\", \"\"], [\"mat-dialog-close\", \"\", 1, \"btn-close\"], [\"mat-dialog-content\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"custom-field-0\"], [\"for\", \"agentDepartment\", 1, \"label\"], [\"id\", \"agentDepartment\", \"formControlName\", \"agentDepartment\", \"required\", \"\", 1, \"input\", 3, \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"for\", \"agent\", 1, \"label\"], [\"id\", \"agent\", \"required\", \"\", \"formControlName\", \"agent\", 1, \"input\"], [\"mat-dialog-actions\", \"\", 1, \"custom-matdialog-footer\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\", 1, \"btn\", \"btn-close\"], [1, \"btn\", \"btn-submit\", 3, \"click\"], [3, \"value\"], [1, \"error-message\"]],\n    template: function AssignCaseDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h4\", 1);\n        i0.ɵɵelementStart(2, \"span\");\n        i0.ɵɵtext(3, \" Assign Case \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 2);\n        i0.ɵɵelementStart(5, \"mat-icon\");\n        i0.ɵɵtext(6, \"close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵelementStart(8, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function AssignCaseDialogComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.formSubmitted(ctx.assignForm.value);\n        });\n        i0.ɵɵelementStart(9, \"div\", 5);\n        i0.ɵɵelementStart(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Agent Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"select\", 7);\n        i0.ɵɵlistener(\"change\", function AssignCaseDialogComponent_Template_select_change_12_listener($event) {\n          return ctx.selectDepartmentChanged($event);\n        });\n        i0.ɵɵtemplate(13, AssignCaseDialogComponent_option_13_Template, 2, 2, \"option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, AssignCaseDialogComponent_p_14_Template, 2, 0, \"p\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 5);\n        i0.ɵɵelementStart(16, \"label\", 10);\n        i0.ɵɵtext(17, \"Agent Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"select\", 11);\n        i0.ɵɵelementStart(19, \"option\");\n        i0.ɵɵtext(20, \"please select an agent name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(21, AssignCaseDialogComponent_option_21_Template, 2, 2, \"option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, AssignCaseDialogComponent_p_22_Template, 2, 0, \"p\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 12);\n        i0.ɵɵelementStart(24, \"button\", 13);\n        i0.ɵɵtext(25, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function AssignCaseDialogComponent_Template_button_click_26_listener() {\n          return ctx.formSubmitted(ctx.assignForm.value);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.assignForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.arrAgentDepartments);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.assignForm.controls[\"agentDepartment\"] == null ? null : ctx.assignForm.controls[\"agentDepartment\"].touched) && (ctx.assignForm.controls[\"agentDepartment\"] == null ? null : ctx.assignForm.controls[\"agentDepartment\"].errors == null ? null : ctx.assignForm.controls[\"agentDepartment\"].errors.required));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.agentsBySelectedDepartment);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.assignForm.controls[\"agent\"] == null ? null : ctx.assignForm.controls[\"agent\"].touched) && (ctx.assignForm.controls[\"agent\"] == null ? null : ctx.assignForm.controls[\"agent\"].errors == null ? null : ctx.assignForm.controls[\"agent\"].errors.required));\n      }\n    },\n    directives: [i3.MatDialogTitle, i3.MatDialogClose, i9.MatIcon, i3.MatDialogContent, i8.ɵNgNoValidate, i8.NgControlStatusGroup, i8.FormGroupDirective, i8.SelectControlValueAccessor, i8.NgControlStatus, i8.FormControlName, i8.RequiredValidator, i10.NgForOf, i10.NgIf, i8.NgSelectOption, i8.ɵNgSelectMultipleOption, i3.MatDialogActions, i11.MatButton],\n    styles: [\"\"]\n  });\n  return AssignCaseDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}