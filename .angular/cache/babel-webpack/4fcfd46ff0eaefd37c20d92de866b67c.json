{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/stores/agent.store\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/forms\";\nexport let CreateAgentsDialogComponent = /*#__PURE__*/(() => {\n  class CreateAgentsDialogComponent {\n    constructor(agentStore) {\n      this.agentStore = agentStore;\n      this.SelectGender = '';\n      this.arrAgents = []; //selectedOption = '1';\n      //departments = ['Developer', ' Accounting', 'Technical', 'Design'];\n\n      this.genders = ['Male', \"Female\"];\n    }\n\n    formSubmitted(formData) {\n      if (this.registrationForm.valid) {\n        this.agentStore.addAgent(Object.assign(Object.assign({}, formData), {\n          photoFilePath: formData.photo,\n          photoDownloadUrl: formData.photo\n        })).subscribe(res => {\n          this.arrAgents.push(res);\n          this.registrationForm.reset();\n        });\n      }\n\n      return;\n    }\n\n    radioChangeHandler(e) {\n      this.SelectGender = e.target.value;\n    }\n\n    ngOnInit() {// this.createAgent();\n    }\n\n  }\n\n  CreateAgentsDialogComponent.ɵfac = function CreateAgentsDialogComponent_Factory(t) {\n    return new (t || CreateAgentsDialogComponent)(i0.ɵɵdirectiveInject(i1.AgentStore));\n  };\n\n  CreateAgentsDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateAgentsDialogComponent,\n    selectors: [[\"app-create-agents-dialog\"]],\n    decls: 29,\n    vars: 1,\n    consts: [[1, \"create-agent-container\"], [\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"loginform\"], [1, \"custom-field\"], [\"type\", \"text\", \"name\", \"username\", \"required\", \"\", \"formControlName\", \"username\", 1, \"form-input\"], [1, \"placeholder\"], [\"type\", \"email\", \"name\", \"email\", \"required\", \"\", \"formControlName\", \"email\", 1, \"form-input\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", \"formControlName\", \"password\", 1, \"form-input\"], [\"mat-dialog-actions\", \"\"], [1, \"custom-btn-close\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\", 1, \"btn-close\"], [1, \"custom-btn-create\"], [1, \"btn-create\"]],\n    template: function CreateAgentsDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h4\", 1);\n        i0.ɵɵtext(2, \"Create Agents\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateAgentsDialogComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.formSubmitted(ctx.registrationForm.value);\n        });\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"label\", 5);\n        i0.ɵɵelement(7, \"input\", 6);\n        i0.ɵɵelementStart(8, \"span\", 7);\n        i0.ɵɵtext(9, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"label\", 5);\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵelementStart(12, \"span\", 7);\n        i0.ɵɵtext(13, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"label\", 5);\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵelementStart(16, \"span\", 7);\n        i0.ɵɵtext(17, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"label\", 5);\n        i0.ɵɵelement(19, \"input\", 9);\n        i0.ɵɵelementStart(20, \"span\", 7);\n        i0.ɵɵtext(21, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 10);\n        i0.ɵɵelementStart(23, \"div\", 11);\n        i0.ɵɵelementStart(24, \"button\", 12);\n        i0.ɵɵtext(25, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 13);\n        i0.ɵɵelementStart(27, \"button\", 14);\n        i0.ɵɵtext(28, \"Create\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.registrationForm);\n      }\n    },\n    directives: [i2.MatDialogTitle, i2.MatDialogContent, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.RequiredValidator, i3.NgControlStatus, i3.FormControlName, i2.MatDialogActions, i2.MatDialogClose],\n    styles: [\"\"]\n  });\n  return CreateAgentsDialogComponent;\n})();\nexport function ConfirmedValidator(controlName, matchingControlName) {\n  return formGroup => {\n    const control = formGroup.controls[controlName];\n    const matchingControl = formGroup.controls[matchingControlName];\n\n    if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\n      return;\n    }\n\n    if (control.value !== matchingControl.value) {\n      matchingControl.setErrors({\n        confirmedValidator: true\n      });\n    } else {\n      matchingControl.setErrors(null);\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}